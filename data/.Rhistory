install.packages("pacman")
library(pacman)
?p_load
p_load(tidyverse, descr, haven)
library(descr)
library(tidyverse)
install.packages("rjags")
library(rjags)
p_load(rjags)
library("pacman")
library(pacman)
p_load(rjags)
p_load(runjags)
# Jussi-Pekka Martikainen
# 6.11.2018
# IODS RStudio Exercise 2 - Data wrangling.
#
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
View(lrn14)
# Jussi-Pekka Martikainen
# 6.11.2018
# IODS RStudio Exercise 2 - Data wrangling.
#
# Step 1. Read the data file from web to memory.
learning2014 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
str(learning2014)
dim(learning2014)
?dim
##Step 3. Create analysis dataset.
library(dplyr)
# selecting the 3 groups of columns like in DataCamp
deep_questions <- c("D03","D11","D19","D27","D07","D14","D22","D30","D06","D15","D23","D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# Jussi-Pekka Martikainen
# 6.11.2018
# IODS RStudio Exercise 2 - Data wrangling.
##Step 1. The comments above
#
##Step 2. Read the data file from web to memory.
df_in <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
# With structure command (str) below we learn that 'learning2018' is:
# - data.frame object
# - has 183 observations (rows) with 60 variables (columns)
#   - executing the command shows the data.frame as transposed: columns as rows, rows as columns
# - 59 of the variables are numeric and 1 is factor
str(learning2014)
# With structure command (dim) below we learn that 'learning2018' has:
# - 183 rows and 60 columns
dim(learning2014)
##Step 3. Create analysis dataset.
# take dplyr in to use
library(dplyr)
# selecting the 3 groups of columns to vectors like in DataCamp
deep_questions <- c("D03","D11","D19","D27","D07","D14","D22","D30","D06","D15","D23","D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# With structure command (str) below we learn that 'learning2018' is:
# - data.frame object
# - has 183 observations (rows) with 60 variables (columns)
#   - executing the command shows the data.frame as transposed: columns as rows, rows as columns
# - 59 of the variables are numeric and 1 is factor
str(df_in)
learning2014 <- data.frame(matrix(ncol=0,nrow=0))
#
original_four <- c("gender","Age","Attitude","Points")
learning2014$gender <- select(df_in, one_of('gender'))
##Step 3. Create analysis dataset.
# start with empty data.frame
learning2014 <- data.frame(matrix(ncol=0,nrow=183))
learning2014$gender <- select(df_in, one_of('gender'))
learning2014$age <- select(df_in, one_of('Age'))
learning2014$attitude<- select(df_in, one_of('Attitude'))
learning2014$points<- select(df_in, one_of('Points'))
str(learning2014)
learning2014$gender <- df_in$gender
# Jussi-Pekka Martikainen
# 6.11.2018
# IODS RStudio Exercise 2 - Data wrangling.
##Step 1. The comments above
#
##Step 2. Read the data file from web to memory.
df_in <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
##Step 3. Create analysis dataset.
# start with empty data.frame with 183 rows
learning2014 <- data.frame(matrix(ncol=0,nrow=183))
learning2014$gender <- df_in$gender
learning2014$age <- df_in$Age
learning2014$attitude<- df_in$Attitude
learning2014$points<- df_in$Points
# selecting the 3 groups of column names to vectors
deep_questions <- c("D03","D11","D19","D27","D07","D14","D22","D30","D06","D15","D23","D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
deep_columns <- select(lrn14, one_of(deep_questions))
deep_columns <- select(learning2014, one_of(deep_questions))
deep_columns <- select(df_in, one_of(deep_questions))
learning2014$deep <- rowMeans(deep_columns)
# Jussi-Pekka Martikainen
# 6.11.2018
# IODS RStudio Exercise 2 - Data wrangling.
##Step 1. The comments above
#
##Step 2. Read the data file from web to memory.
df_in <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
# With structure command (str) below we learn that 'learning2018' is:
# - data.frame object
# - has 183 observations (rows) with 60 variables (columns)
#   - executing the command shows the data.frame as transposed: columns as rows, rows as columns
# - 59 of the variables are numeric and 1 is factor
str(df_in)
# With structure command (dim) below we learn that 'learning2018' has:
# - 183 rows and 60 columns
dim(df_in)
##Step 3. Create analysis dataset.
# start with empty data.frame with 183 rows
learning2014 <- data.frame(matrix(ncol=0,nrow=183))
learning2014$gender <- df_in$gender
learning2014$age <- df_in$Age
learning2014$attitude<- df_in$Attitude
learning2014$points<- df_in$Points
# take dplyr in to use
library(dplyr)
# selecting the 3 groups of column names to vectors
deep_questions <- c("D03","D11","D19","D27","D07","D14","D22","D30","D06","D15","D23","D31")
surf_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
stra_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
deep_columns <- select(df_in, one_of(deep_questions))
learning2014$deep <- rowMeans(deep_columns)
surf_columns <- select(df_in, one_of(surf_questions))
learning2014$surf <- rowMeans(surf_columns)
stra_columns <- select(df_in, one_of(stra_questions))
learning2014$stra <- rowMeans(stra_columns)
# filter out data rows where points 0 or less
learning2014 <- filter(learning2014, points > 0)
getwd()
setwd("/Users/ittobor/Projects/iods/IODS-project/data/")
getwd()
?write.table
?write.csv
##
## Step 4. Saving the data
##
# sequence of getwd - setwd - getwd commands
# I have commented the commands and omitted the my environment specific values
#----
#getwd() #to show working directory
#setwd(".../IODS-project/data/") # set working directory to data-folder in IODS-project
#getwd() #and to show that current working directory is as set
#----
write.csv(learning2014, file="learning2014.txt", sep="\t" row.names=FALSE, col.names=TRUE)
##
## Step 4. Saving the data
##
# sequence of getwd - setwd - getwd commands
# I have commented the commands and omitted the my environment specific values
#----
#getwd() #to show working directory
#setwd(".../IODS-project/data/") # set working directory to data-folder in IODS-project
#getwd() #and to show that current working directory is as set
#----
write.csv(learning2014, file="learning2014.txt", sep="\t")
##
## Step 4. Saving the data
##
# sequence of getwd - setwd - getwd commands
# I have commented the commands and omitted the my environment specific values
#----
#getwd() #to show working directory
#setwd(".../IODS-project/data/") # set working directory to data-folder in IODS-project
#getwd() #and to show that current working directory is as set
#----
write.csv(learning2014, file="learning2014.txt", row.names(FALSE))
##
## Step 4. Saving the data
##
# sequence of getwd - setwd - getwd commands
# I have commented the commands and omitted the my environment specific values
#----
#getwd() #to show working directory
#setwd(".../IODS-project/data/") # set working directory to data-folder in IODS-project
#getwd() #and to show that current working directory is as set
#----
write.csv(learning2014, file="learning2014.txt", row.names(FALSE))
##
## Step 4. Saving the data
##
# sequence of getwd - setwd - getwd commands
# I have commented the commands and omitted the my environment specific values
#----
#getwd() #to show working directory
#setwd(".../IODS-project/data/") # set working directory to data-folder in IODS-project
#getwd() #and to show that current working directory is as set
#----
write.csv(learning2014, file="learning2014.txt")
##
## Step 4. Saving the data
##
# sequence of getwd - setwd - getwd commands
# I have commented the commands and omitted the my environment specific values
#----
#getwd() #to show working directory
#setwd(".../IODS-project/data/") # set working directory to data-folder in IODS-project
#getwd() #and to show that current working directory is as set
#----
write.csv(learning2014, file="learning2014.txt", row.names = FALSE )
##
## Step 4. Saving the data
##
# sequence of getwd - setwd - getwd commands
# I have commented the commands and omitted the my environment specific values
#----
#getwd() #to show working directory
#setwd(".../IODS-project/data/") # set working directory to data-folder in IODS-project
#getwd() #and to show that current working directory is as set
#----
write.csv(learning2014, file="learning2014.txt", row.names = FALSE, quote = FALSE, sep = '\t')
##
## Step 4. Saving the data
##
# sequence of getwd - setwd - getwd commands
# I have commented the commands and omitted the my environment specific values
#----
#getwd() #to show working directory
#setwd(".../IODS-project/data/") # set working directory to data-folder in IODS-project
#getwd() #and to show that current working directory is as set
#----
write.csv(learning2014, file="learning2014.txt", row.names = FALSE, quote = FALSE, sep = "\t")
##
## Step 4. Saving the data
##
# sequence of getwd - setwd - getwd commands
# I have commented the commands and omitted the my environment specific values
#----
#getwd() #to show working directory
#setwd(".../IODS-project/data/") # set working directory to data-folder in IODS-project
#getwd() #and to show that current working directory is as set
#----
write.table(learning2014, file="learning2014.txt", row.names = FALSE, quote = FALSE, sep = "\t")
getwd()
# check that the saved file can be read
df2_in <- read.table("learning2014.txt", sep="\t", header=TRUE)
str(df2_in)
